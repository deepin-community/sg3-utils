From: Ritesh Raj Sarraf <rrs@debian.org>
Date: Fri, 10 Apr 2020 18:13:13 +0530
Subject: Fix path for udevadm

See DBug #852585, for details
---
 scripts/rescan-scsi-bus.sh | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/scripts/rescan-scsi-bus.sh b/scripts/rescan-scsi-bus.sh
index 46fe6c0..7d0bbf7 100755
--- a/scripts/rescan-scsi-bus.sh
+++ b/scripts/rescan-scsi-bus.sh
@@ -452,12 +452,12 @@ getluns()
 udevadm_settle()
 {
   local tmo=60
-  if [ -x /sbin/udevadm ] ; then
+  if [ -x /bin/udevadm ] ; then
     print_and_scroll_back " Calling udevadm settle (can take a while) "
     # Loop for up to 60 seconds if sd devices still are settling..
     # This allows us to continue if udev events are stuck on multipaths in recovery mode
     while [ $tmo -gt 0 ] ; do
-      if ! /sbin/udevadm settle --timeout=1 | egrep -q sd[a-z]+ ; then
+      if ! /bin/udevadm settle --timeout=1 | egrep -q sd[a-z]+ ; then
         break;
       fi
       let tmo=$tmo-1
@@ -799,7 +799,7 @@ findremapped()
 
   # Trigger udev to update the info
   echo -n "Triggering udev to update device information... "
-  /sbin/udevadm trigger
+  /bin/udevadm trigger
   udevadm_settle 2>&1 /dev/null
   echo "Done"
 
@@ -1367,7 +1367,7 @@ if [ -n "$mp_enable" ] && [ $rmvd_found -gt 0 ] ; then
     flushmpaths 1
   fi
   if [ $found -gt 0 ] ; then
-    /sbin/udevadm trigger --sysname-match=sd*
+    /bin/udevadm trigger --sysname-match=sd*
     udevadm_settle
     if [ -x "$MULTIPATH" ] ; then
       echo "Trying to discover new multipath mappings for newly discovered devices... "
